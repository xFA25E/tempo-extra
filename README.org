#+TITLE: tempo-abbrev

This package provides tempo templates for various modes.

* Usage and Example Configuration

#+begin_src elisp
(with-eval-after-load 'csharp-mode (require 'tempo-extra-csharp))
(with-eval-after-load 'elisp-mode (require 'tempo-extra-elisp))
(with-eval-after-load 'js (require 'tempo-extra-js))
(with-eval-after-load 'lisp-mode (require 'tempo-extra-lisp))
(with-eval-after-load 'nix-mode (require 'tempo-extra-nix))
(with-eval-after-load 'org (require 'tempo-extra-org))
#+end_src

* Installation

** Nix
This repo is a nix flake.  You can just add ~overlays.default~ output to your
nixpkgs overlays.

#+begin_src nix
{
  inputs.tempo-extra.url = "github:xFA25E/tempo-extra";
  outputs = { self, tempo-extra, nixpkgs }: let
    pkgs = import nixpkgs {
      system = "your-system";
      overlays = [ tempo-extra.overlays.default ];
    };
  in {
    # YOUR OUTPUTS
  };
}
#+end_src

** Package manager

If you've installed it with your package manager, you're done.

** Manual

Install these required packages:

+ abbrev-hook

hen put .el files in your load-path

* Development
Bug reports, feature requests and suggestions are, of course, welcome!

* License
GPLv3
